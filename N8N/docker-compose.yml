# docker-compose.core.yml
volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  whisper_storage:

networks:
  demo:

############################
# Base templates
############################
x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
    - OLLAMA_HOST=ollama:11434
    - TZ=Asia/Kolkata
    - GENERIC_TIMEZONE=Asia/Kolkata
    - N8N_EDITOR_BASE_URL=https://n8n.madrasmic.in
    - WEBHOOK_URL=https://n8n.madrasmic.in
    - N8N_PROTOCOL=https
    - N8N_SECURE_COOKIE=false
    - N8N_MFA_ENABLED=true
  env_file:
    - .env

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['demo']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  environment:
    - OLLAMA_HOST=ollama:11434
  command:
    - "-c"
    - "sleep 3; ollama pull llama3.2"

############################
# Core Services
############################
services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/demo-data/credentials && n8n import:workflow --separate --input=/demo-data/workflows"
    volumes:
      - ./n8n/demo-data:/demo-data
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/demo-data:/demo-data
      - ./shared:/data/shared
      - ./app-output:/output
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama:
    <<: *service-ollama
    runtime: nvidia
    environment:
      - OLLAMA_GPU=1

  ollama-pull-llama:
    <<: *init-ollama
    depends_on:
      - ollama

  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest
    container_name: whisper
    networks: ['demo']
    ports:
      - "9000:9000"
    volumes:
      - whisper_storage:/app/storage
    environment:
      - ASR_MODEL=small
      - ASR_ENGINE=faster_whisper
    restart: unless-stopped
